import{Int as t,lohi_from_one as e}from"./int64.js";import{Addr as r}from"./mem.js";import{BufferView as i}from"./rw.js";import*as s from"../config.js";import*as n from"./memtools.js";function ViewMixin(t){let e=class extends t{constructor(...t){super(...t),this.buffer}get addr(){let t=this._addr_cache;return void 0!==t||(t=n.get_view_vector(this),this._addr_cache=t),t}get size(){return this.byteLength}addr_at(t){let e=this.BYTES_PER_ELEMENT;return this.addr.add(t*e)}sget(t){return 0|this[t]}};return 1536<=s.target&&s.target<4096&&(e.from=function t(...e){let r=this.__proto__;return new this(r.from(...e).buffer)},e.of=function t(...e){let r=this.__proto__;return new this(r.of(...e).buffer)}),e}export class View1 extends ViewMixin(Uint8Array){}export class View2 extends ViewMixin(Uint16Array){}export class View4 extends ViewMixin(Uint32Array){}export class Buffer extends i{get addr(){let t=this._addr_cache;return void 0!==t||(t=n.get_view_vector(this),this._addr_cache=t),t}get size(){return this.byteLength}addr_at(t){return this.addr.add(t)}}1536<=s.target&&s.target<4096&&(Buffer.from=function t(...e){let r=this.__proto__;return new this(r.from(...e).buffer)},Buffer.of=function t(...e){let r=this.__proto__;return new this(r.of(...e).buffer)});let VariableMixin=t=>class extends t{constructor(t=0){if("number"!=typeof t)throw TypeError("value not a number");super([t])}addr_at(...t){throw TypeError("unimplemented method")}[Symbol.toPrimitive](t){return this[0]}toString(...t){return this[0].toString(...t)}};export class Byte extends VariableMixin(View1){}export class Short extends VariableMixin(View2){}export class Word extends VariableMixin(View4){}export class LongArray{constructor(t){this.buffer=new DataView(new ArrayBuffer(8*t))}get addr(){return n.get_view_vector(this.buffer)}addr_at(t){return this.addr.add(8*t)}get length(){return this.buffer.length/8}get size(){return this.buffer.byteLength}get byteLength(){return this.size}get(e){let r=this.buffer,i=8*e;return new t(r.getUint32(i,!0),r.getUint32(i+4,!0))}set(t,r){let i=this.buffer,s=8*t,n=e(r);i.setUint32(s,n[0],!0),i.setUint32(s+4,n[1],!0)}}let Word64Mixin=t=>class extends t{constructor(...t){if(!t.length)return super(0);super(...t)}get addr(){return n.get_view_vector(this._u32)}get length(){return 1}get size(){return 8}get byteLength(){return 8}get lo(){return super.lo}set lo(t){this._u32[0]=t}get hi(){return super.hi}set hi(t){this._u32[1]=t}set(t){let r=this._u32,i=e(t);r[0]=i[0],r[1]=i[1]}};export class Long extends Word64Mixin(t){as_addr(){return new r(this)}}export class Pointer extends Word64Mixin(r){}