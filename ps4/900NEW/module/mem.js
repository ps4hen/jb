import{Int as t,lohi_from_one as e}from"./int64.js";import{view_m_vector as r,view_m_length as i}from"./offset.js";export let mem=null;let off_vector=r/4,off_vector2=(r+4)/4,isInteger=Number.isInteger;function init_module(t){mem=t}function add_and_set_addr(t,r,i,s){let f=e(r),d=t._main,n=i+f[0];d[off_vector]=n,d[off_vector2]=s+f[1]+(n>4294967295)}export class Addr extends t{read8(t){let e=mem;return isInteger(t)&&0<=t&&t<=4294967295?e._set_addr_direct(this):(add_and_set_addr(e,t,this.lo,this.hi),t=0),e.read8_at(t)}read16(t){let e=mem;return isInteger(t)&&0<=t&&t<=4294967295?e._set_addr_direct(this):(add_and_set_addr(e,t,this.lo,this.hi),t=0),e.read16_at(t)}read32(t){let e=mem;return isInteger(t)&&0<=t&&t<=4294967295?e._set_addr_direct(this):(add_and_set_addr(e,t,this.lo,this.hi),t=0),e.read32_at(t)}read64(t){let e=mem;return isInteger(t)&&0<=t&&t<=4294967295?e._set_addr_direct(this):(add_and_set_addr(e,t,this.lo,this.hi),t=0),e.read64_at(t)}readp(t){let e=mem;return isInteger(t)&&0<=t&&t<=4294967295?e._set_addr_direct(this):(add_and_set_addr(e,t,this.lo,this.hi),t=0),e.readp_at(t)}write8(t,e){let r=mem;isInteger(t)&&0<=t&&t<=4294967295?r._set_addr_direct(this):(add_and_set_addr(r,t,this.lo,this.hi),t=0),r.write8_at(t,e)}write16(t,e){let r=mem;isInteger(t)&&0<=t&&t<=4294967295?r._set_addr_direct(this):(add_and_set_addr(r,t,this.lo,this.hi),t=0),r.write16_at(t,e)}write32(t,e){let r=mem;isInteger(t)&&0<=t&&t<=4294967295?r._set_addr_direct(this):(add_and_set_addr(r,t,this.lo,this.hi),t=0),r.write32_at(t,e)}write64(t,e){let r=mem;isInteger(t)&&0<=t&&t<=4294967295?r._set_addr_direct(this):(add_and_set_addr(r,t,this.lo,this.hi),t=0),r.write64_at(t,e)}}export class Memory{constructor(t,e,s,f,d){this._main=t,this._worker=e,this._obj=s,this._addr_low=f.lo,this._addr_high=f.hi,this._fake_low=d.lo,this._fake_high=d.hi,t[i/4]=4294967295,init_module(this);let n=r,a=new ArrayBuffer(0),o=new Uint8Array(a),h=new Uint32Array(a),$=this.addrof(h);$.write64(n,this.addrof(o).add(n)),$.write32(i,3),this._cpysrc=o,this._src_setter=h;let w=new Uint8Array(a),g=new Uint32Array(a),l=this.addrof(g);l.write64(n,this.addrof(w).add(n)),l.write32(i,3),g[2]=4294967295,this._cpydst=w,this._dst_setter=g}cpy(t,r,i){if(!(isInteger(i)&&0<=i&&i<=4294967295))throw TypeError("len not a unsigned 32-bit integer");let s=e(t),f=e(r),d=this._dst_setter,n=this._src_setter;d[0]=s[0],d[1]=s[1],n[0]=f[0],n[1]=f[1],n[2]=i,this._cpydst.set(this._cpysrc)}gc_alloc(t){if(!isInteger(t))throw TypeError("size not a integer");if(t<0)throw RangeError("size is negative");if((t=(t+7&-8)>>3)>1e3)throw RangeError("size is too large");let e=new Float64Array(t);return[mem.addrof(e).readp(r),e]}fakeobj(t){let r=e(t),i=this._worker,s=this._main;return s[off_vector]=this._fake_low,s[off_vector2]=this._fake_high,i.setUint32(0,r[0],!0),i.setUint32(4,r[1],!0),this._obj[0]}addrof(t){if(null===t||"object"!=typeof t&&"function"!=typeof t)throw TypeError("argument not a JS object");let e=this._obj,r=this._worker,i=this._main;e.addr=t,i[off_vector]=this._addr_low,i[off_vector2]=this._addr_high;let s=new Addr(r.getUint32(0,!0),r.getUint32(4,!0));return e.addr=null,s}_set_addr_direct(t){let e=this._main;e[off_vector]=t.lo,e[off_vector2]=t.hi}set_addr(t){let r=e(t),i=this._main;i[off_vector]=r[0],i[off_vector2]=r[1]}get_addr(){let t=this._main;return new Addr(t[off_vector],t[off_vector2])}read8(t){return this.set_addr(t),this._worker.getUint8(0)}read16(t){return this.set_addr(t),this._worker.getUint16(0,!0)}read32(t){return this.set_addr(t),this._worker.getUint32(0,!0)}read64(e){this.set_addr(e);let r=this._worker;return new t(r.getUint32(0,!0),r.getUint32(4,!0))}readp(t){this.set_addr(t);let e=this._worker;return new Addr(e.getUint32(0,!0),e.getUint32(4,!0))}read8_at(t){if(!isInteger(t))throw TypeError("offset not a integer");return this._worker.getUint8(t)}read16_at(t){if(!isInteger(t))throw TypeError("offset not a integer");return this._worker.getUint16(t,!0)}read32_at(t){if(!isInteger(t))throw TypeError("offset not a integer");return this._worker.getUint32(t,!0)}read64_at(e){if(!isInteger(e))throw TypeError("offset not a integer");let r=this._worker;return new t(r.getUint32(e,!0),r.getUint32(e+4,!0))}readp_at(t){if(!isInteger(t))throw TypeError("offset not a integer");let e=this._worker;return new Addr(e.getUint32(t,!0),e.getUint32(t+4,!0))}write8(t,e){this.set_addr(t),this._worker.setUint8(0,e)}write16(t,e){this.set_addr(t),this._worker.setUint16(0,e,!0)}write32(t,e){this.set_addr(t),this._worker.setUint32(0,e,!0)}write64(t,r){let i=e(r);this.set_addr(t);let s=this._worker;s.setUint32(0,i[0],!0),s.setUint32(4,i[1],!0)}write8_at(t,e){if(!isInteger(t))throw TypeError("offset not a integer");this._worker.setUint8(t,e)}write16_at(t,e){if(!isInteger(t))throw TypeError("offset not a integer");this._worker.setUint16(t,e,!0)}write32_at(t,e){if(!isInteger(t))throw TypeError("offset not a integer");this._worker.setUint32(t,e,!0)}write64_at(t,r){if(!isInteger(t))throw TypeError("offset not a integer");let i=e(r),s=this._worker;s.setUint32(t,i[0],!0),s.setUint32(t+4,i[1],!0)}}